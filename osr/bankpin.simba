{$DEFINE SRL_BANKPIN_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

type
  TRSBankPin = record(TRSInterface)
    Entering: Boolean;
  end;

{$i elements/bankpin.elements}

function TRSBankPin.IsOpen: Boolean;
begin
  Result := Self.ElementFindText(ERSBankPinElement.EXIT, [$0000FF, $FFFFFF], 'Exit', RS_FONT_QUILL_8);
end;

procedure TRSBankPin.Setup(Name: String); override;
begin
  inherited;

  with Self.BoundsFinder.Alignments[ERSClientMode.FIXED] do
  begin
    Left   := [@InterfaceArea.X1];
    Right  := [@InterfaceArea.X2];
    Top    := [@InterfaceArea.Y1, 11];
    Bottom := [@InterfaceArea.Y2];

    Center.MaxWidth  := 488;
    Center.MaxHeight := 305;
  end;

  with Self.BoundsFinder.Alignments[ERSClientMode.RESIZABLE_CLASSIC] do
  begin
    Left   := [@InterfaceArea.X1];
    Right  := [@InterfaceArea.X2];
    Top    := [@InterfaceArea.Y1, 10];
    Bottom := [@InterfaceArea.Y2];

    Center.MaxWidth  := 488;
    Center.MaxHeight := 305;
  end;

  // Same as above
  with Self.BoundsFinder.Alignments[ERSClientMode.RESIZABLE_MODERN] do
  begin
    Left   := [@InterfaceArea.X1];
    Right  := [@InterfaceArea.X2];
    Top    := [@InterfaceArea.Y1, 10];
    Bottom := [@InterfaceArea.Y2];

    Center.MaxWidth  := 488;
    Center.MaxHeight := 305;
  end;
end;

function TRSBankPin.Enter(Pin: String): Boolean;

  function GetDigitToEnter: Integer;
  begin
    if Self.ElementFindText(ERSBankPinElement.STATE, [$FFFFFF], 'FIRST', RS_FONT_BOLD_12)  then Exit(1);
    if Self.ElementFindText(ERSBankPinElement.STATE, [$FFFFFF], 'SECOND', RS_FONT_BOLD_12) then Exit(2);
    if Self.ElementFindText(ERSBankPinElement.STATE, [$FFFFFF], 'THIRD', RS_FONT_BOLD_12)  then Exit(3);
    if Self.ElementFindText(ERSBankPinElement.STATE, [$FFFFFF], 'FOURTH', RS_FONT_BOLD_12) then Exit(4);
  end;

  function ClickDigit(Digit: Char): Boolean;
  var
    Element: ERSBankPinElement;
  begin
    for 1 to 2 do // Check twice to make sure
      for Element in [ERSBankPinElement.DIGIT_1..ERSBankPinElement.DIGIT_10] do
        if Self.ElementFindText(Element, [$007FFF], Digit, RS_FONT_BOLD_12) then
        begin
          Self.ElementClick(Element);

          Exit(True);
        end;

    // Already hovering?
    for Element in [ERSBankPinElement.DIGIT_1..ERSBankPinElement.DIGIT_10] do
      if Mouse.Position() in Self.ElementBounds(Element) then
      begin
        Self.ElementClick(Element);

        Exit(True);
      end;
  end;

var
  Digit: Int32;
begin
  Self.Entering := True;

  try
    while Self.IsOpen() do
    begin
      Digit := GetDigitToEnter();

      if (Digit > 0) and ClickDigit(Pin[Digit]) then
      begin
        if (Digit = 4) then
        begin
         // if Bank.IsOpen(4000) then
        //    Exit(True);
        end else
          WaitUntil(GetDigitToEnter() > Digit, 100, 2000 + Random(1000));
      end;

      Wait(1000, 2000, wdLeft);
    end;

    Result := Bank.IsOpen();
  finally
    Self.Entering := False;
  end;
end;

procedure TRSBankPin.Draw(Bitmap: TMufasaBitmap); override;
begin
  if (not Self.IsOpen()) then
    Exit;

  inherited;
end;

var
  BankPin: TRSBankPin;

begin
  BankPin.Setup('Bank Pin');
end;

{
function TRSBank.IsOpen(WaitForItems: Boolean = True): Boolean; override;
begin
  if (not BankPin.Entering) and BankPin.IsOpen() and (not BankPin.Enter(Login.GetPlayerPin())) then
    Self.Fatal('Failed to enter bank pin');

  Result := inherited;
end;
}
