{$DEFINE SRL_ANVIL_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

const
  ANVIL_QUANTITY_ALL = -1;

type
  TRSAnvil = type TRSInterface;

{$i elements/anvil.elements}

function TRSAnvil.GetItemBoxes: TBoxArray;
begin
  Result := Grid(5, 5, 77, 53, [2, 2], [Self.X1 + 10, Self.Y1 + 36]);
end;

{
procedure TRSAnvil.SetupAlignment(Mode: ERSClientMode); override;
begin
  inherited;

  case Self.Mode of
    ERSClientMode.FIXED:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 500;
        Self.Alignment.Center.MaxHeight := 320;
      end;

    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1, -1];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 500;
        Self.Alignment.Center.MaxHeight := 320;
      end;
  end;
end;
}

function TRSAnvil.CanSmith(B: TBox): Boolean;
begin
  Result := SRL.CountColor($00FF00, B) > 0;
end;

function TRSAnvil.IsCustomQuantity(Quantity: Integer): Boolean;
begin
  Result := not (Quantity in [1,5,10,ANVIL_QUANTITY_ALL]);
end;

function TRSAnvil.FindQuantity(Text: String; Color: Integer; out Element: ERSAnvilElement): Boolean;
begin
  for Element in [ERSAnvilElement.QUANTITY_1..ERSAnvilElement.QUANTITY_5] do
    if Self.ElementFindText(Element, [Color], Text, RS_FONT_PLAIN_11) then
    begin
      Result := True;
      Exit;
    end;
end;

function TRSAnvil.SetQuantity(Quantity: Int32): Boolean;
var
  Text: String;
  Element: ERSAnvilElement;
begin
  Text := ToString(Quantity);
  if (Quantity = ANVIL_QUANTITY_ALL) then
    Text := 'All';

  // Already enabled
  if Self.FindQuantity(Text, RSColors.TEXT_WHITE, Element) then
    Exit(True);

  if Self.FindQuantity(Text, RSColors.TEXT_ORANGE, Element) then
    Result := Self.ElementToggle(Element, RSColors.TEXT_WHITE, 5, 5)
  else
  begin
    if Self.FindQuantity('X', RSColors.TEXT_ORANGE, Element) then
    begin
      Self.ElementClick(Element);

      Result := Chat.AnswerQuery('Enter amount', Text, 3000, 500);
    end;
  end;
end;

function TRSAnvil.SmithItem(Item: TRSItem; Quantity: Integer): Boolean;
var
  B: TBox;
begin
  //Result := Self.FindItem(Item, B) and Self.CanSmith(B) and Self.SetQuantity(Quantity);
  //if Result then
  //  Mouse.Click(B, MOUSE_LEFT);
end;

function TRSAnvil.IsOpen: Boolean;
begin
  Result := Self.IsTitle('What would you like to make?');
end;

procedure TRSAnvil.Draw(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen() then
    Exit;

  inherited;

  Bitmap.DrawBoxArray(Self.GetItemBoxes(), False, $00FFFF);
end;

procedure TRSAnvil.Setup(Name: String); override;
begin
  inherited;

  with Self.BoundsFinder.Alignments[ERSClientMode.FIXED] do
  begin
    Left := [@InterfaceArea.X1];
    Right := [@InterfaceArea.X2];
    Top := [@InterfaceArea.Y1];
    Bottom := [@InterfaceArea.Y2];

    Center.MaxWidth := 500;
    Center.MaxHeight := 320;
  end;

  with Self.BoundsFinder.Alignments[ERSClientMode.RESIZABLE_CLASSIC] do
  begin
    Left := [@InterfaceArea.X1];
    Right := [@InterfaceArea.X2];
    Top := [@InterfaceArea.Y1, -1];
    Bottom := [@InterfaceArea.Y2];

    Center.MaxWidth := 500;
    Center.MaxHeight := 320;
  end;

  // Same as above
  with Self.BoundsFinder.Alignments[ERSClientMode.RESIZABLE_MODERN] do
  begin
    Left := [@InterfaceArea.X1];
    Right := [@InterfaceArea.X2];
    Top := [@InterfaceArea.Y1, -1];
    Bottom := [@InterfaceArea.Y2];

    Center.MaxWidth := 500;
    Center.MaxHeight := 320;
  end;
end;

var
  Anvil: TRSAnvil;

begin
  Anvil.Setup('Anvil');
end;
